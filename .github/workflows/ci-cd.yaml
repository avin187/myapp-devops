name: DevOps Pipeline

on:
  push:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t myapp:${{ github.sha }} .

    - name: Run tests
      run: |
        docker run myapp:${{ github.sha }} python -c "import flask; print('Flask version:', flask.__version__)"

  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: build-test
    environment: dev
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.12.0

    - name: Install Minikube
      run: |
        # Install Minikube
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube
        
        # Verify installation
        minikube version

    - name: Start Minikube
      run: |
        minikube start --driver=docker
        minikube addons enable ingress

    - name: Configure Docker environment
      run: |
        # Point Docker CLI to Minikube's Docker daemon
        eval $(minikube docker-env)
        echo "DOCKER_HOST=$(minikube ip):2376" >> $GITHUB_ENV

    - name: Build in Minikube environment
      run: docker build -t myapp:${{ github.sha }} .

    - name: Deploy with Helm
      run: |
        helm upgrade --install myapp-release ./helm-chart \
          --set image.tag=${{ github.sha }} \
          --set replicaCount=2

    - name: Verify deployment
      run: |
        # Wait for pods to be ready
        minikube kubectl -- wait --for=condition=ready pod -l app=myapp-release --timeout=120s
        
        # Get service URL
        minikube service myapp-release-service --url